<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 扫描redis配置文件
	<context:property-placeholder location="classpath*:redis.properties" ignore-unresolvable="true" />
	 -->
	 <!--file:C:/conf/redis.properties  -->
	<context:property-placeholder location="file:${global.config.path}/redis.properties" 
		ignore-unresolvable="true" />
	 
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" /> 
		<property name="maxWaitMillis" value="${redis.maxWait}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- 配置JedisConnectionFactory ${redis.dbIndex}-->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.pass}"/> -->
		<property name="database" value="2"/>
		<property name="poolConfig" ref="poolConfig"/>
	</bean>

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean>

	<!-- 配置redis连接池final GenericObjectPoolConfig poolConfig, final String host, int port,
      int timeout, final String password, final int database -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="poolConfig" ref="poolConfig" />
		<constructor-arg name="host" value="${redis.host}" type="java.lang.String" />
		<constructor-arg name="port" value="${redis.port}" type="int" />
		<!-- <constructor-arg name="timeout" value="${redis.timeout}" type="int" /> -->
		<!-- <constructor-arg name="password" value="${redis.pass}"/>  -->
		<!-- <constructor-arg name="database" value="${redis.dbIndex}" type="int" /> -->
	</bean>
	
	<!-- jedisPool连接池管理器 -->
	<bean id="jedisManager" class="com.vguang.utils.JedisManager">
		<property name="jedisPool" ref="jedisPool"></property>
	</bean>
</beans>
